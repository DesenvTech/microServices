name: Deploy | STG
on:
  workflow_dispatch:
  push:
    branches:
      - main
  # pull_request:
  #   branches: [ main ]

jobs:
  
  build:
    context: ./api-gateway
    dockerfile: Dockerfile.dev
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: sa-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: micro-services
        IMAGE_TAG: micro-services
        NODE_ENV: staging
        PORT: 3000
        KEY_CLOAK_URI: http://172.17.0.1:8080/auth/realms/microservices/protocol/openid-connect/token
        KEY_CLOAK_CLIENT_ID: micro-services
        KEY_CLOAK_GRANT_TYPE: password
        KEY_CLOAK_CLIENT_SECRET: WJ7wDl3lp4qottXd2w4x8hWNHB9A6rHd
        KEY_CLOAK_REALM_PUBLIC_KEY: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjOl1VNh3uBkRrPSiZNJEvYG1yosZdyCrj63oPzPmB1S6tgDxACpIshgOlO7yKP0khE79IYhTZjD6PmcZ0ffF6QMrMvMox2jopM2rmSw7AOybTmeFXWhncYwWSP8x5hYcij1hqIWiy5wRu8CkRhjaE2ucFEoyxCJ24zFyBe5UFa76whGN4nrteQvZCVu81gPgqUZiZU5h+R/iuSy5nFsTdkwRenRJ7/DtMmLQlk3mrmK0K0v2oWQ0RgPIqndAGcahNbx5b4udMMAqg4TBVLPOMu0bsdI6Cp7dmI+sFfW5CVKmkZ5VerumGEPhJHunNhJVqyRgfUVVrH8Ceiuzta8PDQIDAQAB
    
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"